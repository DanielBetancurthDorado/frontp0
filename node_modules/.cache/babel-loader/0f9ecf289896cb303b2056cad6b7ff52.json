{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useForm = (initialState, action, validateFunction) => {\n  _s();\n\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  const handleChange = evt => {\n    setValues({ ...values,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setErrors(validateFunction(values));\n\n    if (Object.keys(errors).length === 0) {\n      action(values);\n    }\n  };\n\n  const passwordHandler = (score, password, isvalid) => {\n    if (password) {\n      setValues({ ...values,\n        password: password.password\n      });\n    }\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    errors,\n    passwordHandler\n  };\n};\n\n_s(useForm, \"M7GG5NIHqvBd9TxIMU2pNs09GMo=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/danielbetancurth/Desktop/proyecto0cloud/src/hooks/useForm.js"],"names":["useState","useForm","initialState","action","validateFunction","values","setValues","errors","setErrors","handleChange","evt","target","name","value","handleSubmit","preventDefault","Object","keys","length","passwordHandler","score","password","isvalid"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,CAACC,YAAD,EAAeC,MAAf,EAAuBC,gBAAvB,KAA4C;AAAA;;AAC1D,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACE,YAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,YAAY,GAAIC,GAAD,IAAS;AAC5BJ,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACK,GAAG,CAACC,MAAJ,CAAWC,IAAZ,GAAmBF,GAAG,CAACC,MAAJ,CAAWE;AAFtB,KAAD,CAAT;AAID,GALD;;AAOA,QAAMC,YAAY,GAAIJ,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACK,cAAJ;AACAP,IAAAA,SAAS,CAACJ,gBAAgB,CAACC,MAAD,CAAjB,CAAT;;AACA,QAAIW,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,MAApB,KAA+B,CAAnC,EAAsC;AACpCf,MAAAA,MAAM,CAACE,MAAD,CAAN;AACD;AACF,GAND;;AAQA,QAAMc,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,OAAlB,KAA8B;AACpD,QAAID,QAAJ,EAAc;AACZf,MAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAERgB,QAAAA,QAAQ,EAAEA,QAAQ,CAACA;AAFX,OAAD,CAAT;AAID;AACF,GAPD;;AAQA,SAAO;AAAEZ,IAAAA,YAAF;AAAgBK,IAAAA,YAAhB;AAA8BP,IAAAA,MAA9B;AAAsCY,IAAAA;AAAtC,GAAP;AACD,CA5BD;;GAAMlB,O;;AA8BN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (initialState, action, validateFunction) => {\n  const [values, setValues] = useState(initialState);\n  const [errors, setErrors] = useState({});\n\n  const handleChange = (evt) => {\n    setValues({\n      ...values,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setErrors(validateFunction(values));\n    if (Object.keys(errors).length === 0) {\n      action(values);\n    }\n  };\n\n  const passwordHandler = (score, password, isvalid) => {\n    if (password) {\n      setValues({\n        ...values,\n        password: password.password,\n      });\n    }\n  };\n  return { handleChange, handleSubmit, errors, passwordHandler };\n};\n\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}