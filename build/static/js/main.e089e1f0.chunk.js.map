{"version":3,"sources":["hooks/context.js","components/login.js","components/signup.js","components/principal.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","Login","useState","username","setUsername","password","setPassword","user","setUser","useContext","setContext","history","useHistory","handleSubmit","e","a","preventDefault","axios","post","response","token","data","access_token","get","usuarioActualizarToken","idActualizar","id","put","login","contrasena","actualizacionToken","path","to","onSubmit","htmlFor","type","value","placeholder","onChange","target","Button","onClick","push","Signup","setRegistro","Principal","context","eventos","setEventos","edit","setEdit","detail","setDetail","setPost","eventoActual","setEventoActual","Date","startDate","setStartDate","endDate","setEndDate","nombre","setNombre","categoria","setCategoria","lugar","setLugar","direccion","setDireccion","tipo","setTipo","infoDetalle","setInfoDetalle","useEffect","headers","Authorization","then","res","catch","error","console","fechaInicio","fechaFin","status","alert","handleSubmitPost","className","map","evento","index","Card","Header","as","Body","Title","Text","Link","idEvento","idCreador","creador_id","delete","selected","format","date","App","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e089e1f0.chunk.js","sourcesContent":["import React from \"react\";\nexport const Context = React.createContext();","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { useContext } from \"react\";\nimport { Context } from \"../hooks/context.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState();\n  const [context, setContext] = useContext(Context);\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await axios.post(\"/auth\", {\n      username: username,\n      password: password,\n    });\n    const token = `JWT ${response.data.access_token}`;\n    //'/usuarios/<str:login>/<str:password>'\n    const usuarioActualizarToken = await axios.get(\n      `/usuarios/${username}/${password}`\n    );\n    const idActualizar = usuarioActualizarToken.data.id;\n    const actualizacionToken = await axios.put(\"/usuarios/\" + idActualizar, {\n      login: username,\n      contrasena: password,\n      token: token,\n    });\n    setContext(actualizacionToken.data);\n    setUser(actualizacionToken.data);\n  };\n  // if there's a user show the message below\n  if (user) {\n    const path = `/usuarios/${user.id}/eventos`;\n    return (\n      <div>\n        <Redirect to={path} />\n      </div>\n    );\n  }\n  const irRegistro = () => {\n    history.push(\"/\");\n  };\n  return (\n    <div>\n      <h1>Inicia sesión</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">Correo: </label>\n        <input\n          type=\"email\"\n          value={username}\n          placeholder=\"Ingresa un correo\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n        <div>\n          <label htmlFor=\"password\">Contraseña: </label>\n          <input\n            type=\"password\"\n            value={password}\n            placeholder=\"Ingresa una contraseña\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <Button type=\"submit\">Enviar</Button>\n        <Button onClick={irRegistro}>Ir a registro</Button>\n      </form>\n    </div>\n  );\n};\nexport default Login;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport { useContext } from \"react\";\nimport { Context } from \"../hooks/context.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\n\nconst Signup = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [registro, setRegistro] = useState({});\n  const [context, setContext] = useContext(Context);\n  const history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await axios.post(\"/usuarios\", {\n      login: username,\n      contrasena: password,\n    });\n\n   setRegistro(response.data);\n   history.push(\"/login\");\n\n    //setUser(response.data);\n  };\n  // if there's a user show the message below\n\n  const irInicioSesion = () => {\n    history.push(\"/login\");\n  };\n  // if there's no user, show the login form\n  return (\n    <div>\n      <h1>Registrate</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"username\">Correo: </label>\n        <input\n          type=\"email\"\n          value={username}\n          placeholder=\"Ingresa un correo\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n        <div>\n          <label htmlFor=\"password\">Contraseña: </label>\n          <input\n            type=\"password\"\n            value={password}\n            placeholder=\"Ingresa una contraseña\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <Button type=\"submit\">Enviar</Button>\n        <Button onClick={irInicioSesion}>Ir a inicio de sesión</Button>\n      </form>\n    </div>\n  );\n};\nexport default Signup;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Context } from \"../hooks/context.js\";\nimport axios from \"axios\";\nimport { Card, Button } from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst Principal = () => {\n  const [context, setContext] = useContext(Context);\n  const [eventos, setEventos] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [detail, setDetail] = useState(false);\n  const [post, setPost] = useState(false);\n  const [eventoActual, setEventoActual] = useState(0);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [nombre, setNombre] = useState(\"\");\n  const [categoria, setCategoria] = useState(\"\");\n  const [lugar, setLugar] = useState(\"\");\n  const [direccion, setDireccion] = useState(\"\");\n  const [tipo, setTipo] = useState(\"\");\n  const [infoDetalle, setInfoDetalle] = useState({});\n\n  const user = context;\n\n  useEffect(() => {\n    axios\n      .get(`/usuarios/${user.id}/eventos`, {\n        headers: {\n          Authorization: user.token,\n        },\n      })\n      .then((res) => {\n        setEventos(res.data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [eventos]); //hay que colocar eventos en []\n\n  const eliminar = (idEvento, idCreador) => {\n    axios.delete(\"/usuarios/\" + idCreador + \"/eventos/\" + idEvento);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await axios.put(\n      \"/usuarios/\" + user.id + \"/eventos/\" + eventoActual,\n      {\n        nombre: nombre,\n        categoria: categoria,\n        lugar: lugar,\n        direccion: direccion,\n        fechaInicio: startDate,\n        fechaFin: endDate,\n        tipo: tipo,\n      },\n      {\n        headers: {\n          Authorization: user.token,\n        },\n      }\n    );\n    if (response.status === 200) {\n      alert(\"Se actualizó el evento correctamente\");\n    }\n    if (!response.status) {\n      alert(\n        \"No se pudo actualizar el evento, revise el valor de los parametros\"\n      );\n    }\n    setEdit(false);\n    setEventoActual(0);\n  };\n  const editar = (idEvento) => {\n    return (\n      <div>\n        <h2>Editando evento</h2>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"nombre\">Nombre: </label>\n          <input\n            type=\"text\"\n            value={nombre}\n            placeholder=\"Ingrese el nuevo nombre del evento\"\n            onChange={({ target }) => setNombre(target.value)}\n          />\n          <div>\n            <label htmlFor=\"direccion\">Direccion: </label>\n            <input\n              type=\"text\"\n              value={direccion}\n              placeholder=\"Ingrese la nueva direccion del evento\"\n              onChange={({ target }) => setDireccion(target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"categoria\">Categoria: </label>\n            <input\n              type=\"text\"\n              value={categoria}\n              placeholder=\"Ingrese la nueva categoria del evento\"\n              onChange={({ target }) => setCategoria(target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"lugar\">Lugar: </label>\n            <input\n              type=\"text\"\n              value={lugar}\n              placeholder=\"Ingrese le nuevo lugar del evento\"\n              onChange={({ target }) => setLugar(target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fechaInicio\">Fecha Inicio: </label>\n            <DatePicker\n              selected={startDate}\n              format={\"yyyy-mm-dd hh:mm:ss\"}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">FechaFin: </label>\n            <DatePicker\n              selected={endDate}\n              format={\"yyyy-mm-dd hh:mm:ss\"}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n            />{\" \"}\n          </div>\n          <div>\n            <label htmlFor=\"tipo\">Tipo: </label>\n            <input\n              type=\"text\"\n              value={tipo}\n              placeholder=\"Ingrese el tipo del evento\"\n              onChange={({ target }) => setTipo(target.value)}\n            />\n          </div>\n          <button type=\"submit\">Editar evento</button>\n        </form>\n      </div>\n    );\n  };\n  const handleSubmitPost = async (e) => {\n    e.preventDefault();\n    const response = await axios.post(\n      \"/usuarios/\" + user.id + \"/eventos\",\n      {\n        nombre: nombre,\n        categoria: categoria,\n        lugar: lugar,\n        direccion: direccion,\n        fechaInicio: startDate,\n        fechaFin: endDate,\n        tipo: tipo,\n      },\n      {\n        headers: {\n          Authorization: user.token,\n        },\n      }\n    );\n    if (response.status === 200) {\n      alert(\"Se creo el evento correctamente\");\n    }\n    if (!response.status) {\n      alert(\n        \"No se pudo actualizar el evento, revise el valor de los parametros\"\n      );\n    }\n    setPost(false);\n  };\n  const agregar = () => {\n    return (\n      <div>\n        <h2>Agregando evento</h2>\n        <form onSubmit={handleSubmitPost}>\n          <label htmlFor=\"nombre\">Nombre: </label>\n          <input\n            type=\"text\"\n            value={nombre}\n            placeholder=\"Ingrese el nuevo nombre del evento\"\n            onChange={({ target }) => setNombre(target.value)}\n          />\n          <div>\n            <label htmlFor=\"direccion\">Direccion: </label>\n            <input\n              type=\"text\"\n              value={direccion}\n              placeholder=\"Ingrese la nueva direccion del evento\"\n              onChange={({ target }) => setDireccion(target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"categoria\">Categoria: </label>\n            <input\n              type=\"text\"\n              value={categoria}\n              placeholder=\"Ingrese la nueva categoria del evento\"\n              onChange={({ target }) => setCategoria(target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"lugar\">Lugar: </label>\n            <input\n              type=\"text\"\n              value={lugar}\n              placeholder=\"Ingrese le nuevo lugar del evento\"\n              onChange={({ target }) => setLugar(target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"fechaInicio\">Fecha Inicio: </label>\n            <DatePicker\n              selected={startDate}\n              format={\"yyyy-mm-dd hh:mm:ss\"}\n              onChange={(date) => {\n                setStartDate(date);\n              }}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\">FechaFin: </label>\n            <DatePicker\n              selected={endDate}\n              format={\"yyyy-mm-dd hh:mm:ss\"}\n              onChange={(date) => {\n                setEndDate(date);\n              }}\n            />{\" \"}\n          </div>\n          <div>\n            <label htmlFor=\"tipo\">Tipo: </label>\n            <input\n              type=\"text\"\n              value={tipo}\n              placeholder=\"Ingrese el tipo del evento\"\n              onChange={({ target }) => setTipo(target.value)}\n            />\n          </div>\n          <button type=\"submit\">Agregar evento</button>\n        </form>\n      </div>\n    );\n  };\n  const verDetalle = () => {\n    return (\n      <div>\n        <h1>{infoDetalle.nombre}</h1>\n        <h2 className=\"text-primary\">Categoria:</h2>\n        <h3>{infoDetalle.categoria}</h3>\n        <h2 className=\"text-primary\">Dirección:</h2>\n        <h3>{infoDetalle.direccion}</h3>\n        <h2 className=\"text-primary\">Fecha de inicio:</h2>\n        <h3>{infoDetalle.fechaInicio}</h3>\n        <h2 className=\"text-primary\">Fecha de termino:</h2>\n        <h3>{infoDetalle.fechaFin}</h3>\n        <h2 className=\"text-primary\">Tipo de evento:</h2>\n        <h3>{infoDetalle.tipo}</h3>\n      </div>\n    );\n  };\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          setPost(true);\n          setDetail(false);\n          setEdit(false);\n        }}\n      >\n        Agregar un evento\n      </Button>\n      <div className=\"row\">\n        {eventos.map((evento, index) => (\n          <div key={index + 1}>\n            <Card>\n              <Card.Header as=\"h5\">{evento.nombre}</Card.Header>\n              <Card.Body>\n                <Card.Title>{evento.categoria}</Card.Title>\n                <Card.Text>\n                  Fechas: {evento.fechaInicio} - {evento.fechaFin}{\" \"}\n                </Card.Text>\n                <Card.Link\n                  onClick={() => {\n                    setPost(false);\n                    setDetail(true);\n                    setEdit(false);\n                    setEventoActual(evento.id);\n\n                    axios\n                      .get(`/usuarios/${user.id}/eventos/${evento.id}`, {\n                        headers: {\n                          Authorization: user.token,\n                        },\n                      })\n                      .then((response) => {\n                        setInfoDetalle(response.data);\n                      });\n                  }}\n                >\n                  Detalle\n                </Card.Link>\n                <Card.Link\n                  onClick={() => {\n                    setPost(false);\n                    setDetail(false);\n                    setEdit(true);\n                    setEventoActual(evento.id);\n                  }}\n                >\n                  Editar evento\n                </Card.Link>\n                <Card.Link\n                  onClick={() => {\n                    eliminar(evento.id, evento.creador_id);\n                    setPost(false);\n                    setDetail(false);\n                    setEdit(false);\n                  }}\n                >\n                  Eliminar evento\n                </Card.Link>\n              </Card.Body>\n            </Card>\n          </div>\n        ))}\n      </div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-4\"> {edit ? editar(eventoActual) : null}</div>\n          <div className=\"col-4\"> {post ? agregar() : null}</div>\n          <div className=\"col-4\">{detail ? verDetalle() : null}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Principal;\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Login from \"./components/login.js\";\nimport Signup from \"./components/signup.js\";\nimport Principal from \"./components/principal.js\";\nimport { Context } from \"./hooks/context.js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  const [context, setContext] = useState(\"default context value\");\n  return (\n    <Context.Provider value={[context, setContext]}>\n    <Router>\n      <Switch>\n        <Route path=\"/usuarios/:id/eventos\">\n          <Principal />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/\">\n          <Signup />\n        </Route>\n      </Switch>\n    </Router>\n    </Context.Provider>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}